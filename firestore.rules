rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the resource
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection - users can read/write their own data
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }
    
    // User categories - users can read/write their own categories
    match /userCategories/{userId} {
      allow read, write: if isOwner(userId);
    }
    
    // Expenses collection
    match /expenses/{expenseId} {
      // Allow authenticated users to list/read all expenses
      // Client-side filtering will handle personal vs family
      allow read, list: if isAuthenticated();
      
      // Allow create if user is authenticated and sets correct userId
      allow create: if isAuthenticated() && 
                       ((request.resource.data.type == "personal" && 
                         request.resource.data.userId == request.auth.uid) ||
                        (request.resource.data.type == "family" && 
                         (!("userId" in request.resource.data) || 
                          request.resource.data.userId == null)));
      
      // Allow update/delete only for own expenses or family expenses
      allow update, delete: if isAuthenticated() && 
                               (resource.data.type == "family" || 
                                resource.data.userId == request.auth.uid);
    }
    
    // Budgets collection
    match /budgets/{budgetId} {
      // Allow authenticated users to list/read all budgets
      allow read, list: if isAuthenticated();
      
      // Allow write if user is authenticated and sets correct userId
      allow write: if isAuthenticated() && 
                      ((request.resource.data.type == "family" && 
                        (!("userId" in request.resource.data) || 
                         request.resource.data.userId == null)) ||
                       (request.resource.data.type == "personal" && 
                        request.resource.data.userId == request.auth.uid));
    }
    
    // Installments collection - only owner can access
    match /installments/{installmentId} {
      allow read, list: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update, delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }
    
    // Salary collection
    match /salary/{salaryId} {
      // Allow authenticated users to list/read all salary records
      allow read, list: if isAuthenticated();
      
      // Allow write if user is authenticated and sets correct userId
      allow write: if isAuthenticated() && 
                      ((request.resource.data.type == "family" && 
                        (!("userId" in request.resource.data) || 
                         request.resource.data.userId == null)) ||
                       (request.resource.data.type == "personal" && 
                        request.resource.data.userId == request.auth.uid));
    }
    
    // Family members collection - all authenticated users can read/write
    match /familyMembers/{memberId} {
      allow read, write: if isAuthenticated();
    }
  }
}
